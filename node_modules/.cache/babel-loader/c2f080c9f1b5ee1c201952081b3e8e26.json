{"ast":null,"code":"var _jsxFileName = \"C:\\\\booklib\\\\openbook\\\\OpenBook-main\\\\src\\\\Components\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Card = _ref => {\n  _s();\n\n  let {\n    book\n  } = _ref;\n  const [show, setShow] = useState(false);\n  const [bookItem, setItem] = useState(null);\n\n  if (!book || !Array.isArray(book)) {\n    // Handle the case when 'book' prop is not provided or not an array\n    return null; // Or you can return a placeholder or loading component\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [book.map(item => {\n      let thumbnail = item.volumeInfo.imageLinks && item.volumeInfo.imageLinks.smallThumbnail;\n      let amount = item.saleInfo.listPrice && item.saleInfo.listPrice.amount;\n\n      if (thumbnail !== undefined && amount !== undefined) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          onClick: () => {\n            setShow(true);\n            setItem(item);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: thumbnail,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"title\",\n              children: item.volumeInfo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"amount\",\n              children: [\"\\u20B9\", amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this);\n      } else {\n        return null; // Skip rendering this card if thumbnail or amount is undefined\n      }\n    }), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      item: bookItem,\n      onClose: () => setShow(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Card, \"lnAtqEVCLq+Efhqadzm6kr9n8qU=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/booklib/openbook/OpenBook-main/src/Components/Card.js"],"names":["React","useState","Modal","Card","book","show","setShow","bookItem","setItem","Array","isArray","map","item","thumbnail","volumeInfo","imageLinks","smallThumbnail","amount","saleInfo","listPrice","undefined","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAEA,MAAMC,IAAI,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACM,QAAD,EAAWC,OAAX,IAAsBP,QAAQ,CAAC,IAAD,CAApC;;AAEA,MAAI,CAACG,IAAD,IAAS,CAACK,KAAK,CAACC,OAAN,CAAcN,IAAd,CAAd,EAAmC;AAC/B;AACA,WAAO,IAAP,CAF+B,CAElB;AAChB;;AAED,sBACI;AAAA,eACKA,IAAI,CAACO,GAAL,CAAUC,IAAD,IAAU;AAChB,UAAIC,SAAS,GAAGD,IAAI,CAACE,UAAL,CAAgBC,UAAhB,IAA8BH,IAAI,CAACE,UAAL,CAAgBC,UAAhB,CAA2BC,cAAzE;AACA,UAAIC,MAAM,GAAGL,IAAI,CAACM,QAAL,CAAcC,SAAd,IAA2BP,IAAI,CAACM,QAAL,CAAcC,SAAd,CAAwBF,MAAhE;;AAEA,UAAIJ,SAAS,KAAKO,SAAd,IAA2BH,MAAM,KAAKG,SAA1C,EAAqD;AACjD,4BACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAoC,UAAA,OAAO,EAAE,MAAM;AAAEd,YAAAA,OAAO,CAAC,IAAD,CAAP;AAAeE,YAAAA,OAAO,CAACI,IAAD,CAAP;AAAe,WAAnF;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEC,SAAV;AAAqB,YAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,OAAd;AAAA,wBAAuBD,IAAI,CAACE,UAAL,CAAgBO;AAAvC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAG,cAAA,SAAS,EAAC,QAAb;AAAA,mCAA8BJ,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAA2BL,IAAI,CAACU,EAAhC;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH,OAVD,MAUO;AACH,eAAO,IAAP,CADG,CACU;AAChB;AACJ,KAjBA,CADL,eAmBI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEjB,IAAb;AAAmB,MAAA,IAAI,EAAEE,QAAzB;AAAmC,MAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,KAAD;AAAzD;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA,kBADJ;AAuBH,CAhCD;;GAAMH,I;;KAAAA,I;AAkCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Modal from \"./Modal\";\n\nconst Card = ({ book }) => {\n    const [show, setShow] = useState(false);\n    const [bookItem, setItem] = useState(null);\n\n    if (!book || !Array.isArray(book)) {\n        // Handle the case when 'book' prop is not provided or not an array\n        return null; // Or you can return a placeholder or loading component\n    }\n\n    return (\n        <>\n            {book.map((item) => {\n                let thumbnail = item.volumeInfo.imageLinks && item.volumeInfo.imageLinks.smallThumbnail;\n                let amount = item.saleInfo.listPrice && item.saleInfo.listPrice.amount;\n                \n                if (thumbnail !== undefined && amount !== undefined) {\n                    return (\n                        <div className=\"card\" key={item.id} onClick={() => { setShow(true); setItem(item) }}>\n                            <img src={thumbnail} alt=\"\" />\n                            <div className=\"bottom\">\n                                <h3 className=\"title\">{item.volumeInfo.title}</h3>\n                                <p className=\"amount\">&#8377;{amount}</p>\n                            </div>\n                        </div>\n                    );\n                } else {\n                    return null; // Skip rendering this card if thumbnail or amount is undefined\n                }\n            })}\n            <Modal show={show} item={bookItem} onClose={() => setShow(false)} />\n        </>\n    );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}